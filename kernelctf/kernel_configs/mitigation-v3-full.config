################### General hardening ##########################################

# Panic instead of failing gracefully and printing a warning when detecting data
# corruption (e.g. in list debugging and SLAB_VIRTUAL)
CONFIG_BUG_ON_DATA_CORRUPTION=y
# Check linked lists for corruption. Must be enabled together with
# CONFIG_BUG_ON_DATA_CORRUPTION.
CONFIG_DEBUG_LIST=y
# Prevent overflows and other overwrites in copy_from/to_user
CONFIG_HARDENED_USERCOPY=y
# Detect some buffer overflows in strcpy/memcpy
CONFIG_FORTIFY_SOURCE=y
# Sets kernel.dmesg_restrict to 1 by default
CONFIG_SECURITY_DMESG_RESTRICT=y
# Prevent processes belonging to the same (unprivileged) user from ptracing each
# other except for parents ptracing their children
CONFIG_SECURITY_YAMA=y
# Zero stack frames on function entry, makes some uninitialized variable uses
# unexploitable
CONFIG_INIT_STACK_ALL_ZERO=y
# Print a warning if there are WX mappings at boot
CONFIG_DEBUG_WX=y
# Stack canaries
CONFIG_STACKPROTECTOR=y
CONFIG_STACKPROTECTOR_STRONG=y
# Guard pages for kernel stacks
CONFIG_VMAP_STACK=y
# Randomize the offset of data on the kernel stack in syscalls
CONFIG_RANDOMIZE_KSTACK_OFFSET=y
CONFIG_RANDOMIZE_KSTACK_OFFSET_DEFAULT=y
# Text KASLR
CONFIG_RANDOMIZE_BASE=y
# Other KASLR
CONFIG_RANDOMIZE_MEMORY=y
# Enforce W^X in the kernel
CONFIG_STRICT_KERNEL_RWX=y
CONFIG_STRICT_MODULE_RWX=y
# Enable UMIP on the CPU to prevent using sidt/sgdt in userspace to leak kernel
# pointers (if the CPU supports UMIP)
CONFIG_X86_UMIP=y

################### CPU side channels ##########################################

# Meltdown mitigation
CONFIG_PAGE_TABLE_ISOLATION=y
# Spectre mitigations
CONFIG_RETPOLINE=y
CONFIG_CPU_IBPB_ENTRY=y
CONFIG_CPU_IBRS_ENTRY=y

################### Memory allocator ###########################################

# SLUB because SLAB_VIRTUAL doesn't support SLAB or SLOB and those are
# deprecated anyway
CONFIG_SLUB=y
# Randomize the order of the freelist when a new slab is created
CONFIG_SLAB_FREELIST_RANDOM=y
# Prevent attacks on the SLUB freelists
CONFIG_SLAB_FREELIST_HARDENED=y
# Don't merge slab caches (makes random caches/varsize useless and cross-cache easier)
CONFIG_SLAB_MERGE_DEFAULT=n
# Allocate msg_msg and some other useful objects in separate -cg caches
CONFIG_CGROUPS=y
CONFIG_MEMCG=y

################### BPF ########################################################

# Allow sandboxing with seccomp
CONFIG_SECCOMP=y
CONFIG_SECCOMP_FILTER=y
# This is required for jitting seccomp filters (probably)
CONFIG_BPF_SYSCALL=y
# Remove Spectre gadgets in the BPF interpreter
CONFIG_BPF_JIT=y
CONFIG_BPF_JIT_ALWAYS_ON=y
# Makes the kernel.unprivileged_bpf_disabled default to 2
CONFIG_BPF_UNPRIV_DEFAULT_OFF=y

################### Attack surface reduction ###################################

# Disable io_uring
CONFIG_IO_URING=n
# Prevent attackers from stopping the kernel inside copy_from/to_user
CONFIG_USERFAULTFD=n
CONFIG_FUSE_FS=n
# Disable staging drivers, which may be more buggy
CONFIG_STAGING=n

################## Extra mitigations/not upstreamed ############################

# Protects against cross-cache attacks. Must be enabled together with
# CONFIG_BUG_ON_DATA_CORRUPTION
CONFIG_SLAB_VIRTUAL=y
# Splits kmalloc caches in fixed-size and dynamic size to make UaF exploitation
# harder
CONFIG_KMALLOC_SPLIT_VARSIZE=y
# Create multiple copies of the normal and -cg kmalloc caches to make spraying
# harder
CONFIG_RANDOM_KMALLOC_CACHES=y

################### Make the kernel less annyoing to debug #####################

# Compile the kernel with debug info
CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT=y
# Have all symbols in kallsyms
CONFIG_KALLSYMS=y
CONFIG_KALLSYMS_ALL=y
CONFIG_TRIM_UNUSED_KSYMS=n
# Include the kernel configuration in the bzImage/vmlinux
CONFIG_IKCONFIG=y
CONFIG_IKCONFIG_PROC=y
# SLUB stats in /sys/slab
SLUB_DEBUG=y
